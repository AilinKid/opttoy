exec
CREATE TABLE a (x INT, y INT)
----
table a
  x NULL
  y NULL

prep
SELECT y FROM a GROUP BY x
----
project
  columns: a.y:1
  projections:
    variable (a.y) [in=1]
  inputs:
    groupBy
      columns: a.x:0 +a.y:1
      groupings:
        variable (a.x) [in=0]
      inputs:
        scan
          columns: +a.x:0 a.y:1

prep
SELECT y FROM a GROUP BY y, x
----
project
  columns: a.y:1
  projections:
    variable (a.y) [in=1]
  inputs:
    groupBy
      columns: a.x:0 +a.y:1
      groupings:
        variable (a.y) [in=1]
        variable (a.x) [in=0]
      inputs:
        scan
          columns: +a.x:0 +a.y:1

prep
SELECT DISTINCT * FROM a
----
groupBy
  columns: +a.x:0 +a.y:1
  groupings:
    variable (a.x) [in=0]
    variable (a.y) [in=1]
  inputs:
    scan
      columns: +a.x:0 +a.y:1

prep
SELECT COUNT(*) FROM a
----
groupBy
  columns: .column1:2
  aggregations:
    func (count)
      inputs:
        const (1)
  inputs:
    scan
      columns: a.x:0 a.y:1

prep
SELECT COUNT(*) FROM a GROUP BY x
----
project
  columns: .column3:2
  projections:
    variable (column3) [in=2]
  inputs:
    groupBy
      columns: a.x:0 a.y:1 +.column3:2
      groupings:
        variable (a.x) [in=0]
      aggregations:
        func (count)
          inputs:
            const (1)
      inputs:
        scan
          columns: +a.x:0 a.y:1

prep
SELECT x FROM a GROUP BY x HAVING SUM(y) > 0
----
project
  columns: a.x:0
  projections:
    variable (a.x) [in=0]
  inputs:
    groupBy
      columns: +a.x:0 a.y:1 .column3:2
      groupings:
        variable (a.x) [in=0]
      aggregations:
        func (sum) [in=1]
          inputs:
            variable (a.y) [in=1]
      filters:
        comp (>) [in=1]
          inputs:
            variable (column3) [in=2]
            const (0)
      inputs:
        scan
          columns: +a.x:0 +a.y:1

prep
SELECT x, SUM(y) FROM a GROUP BY x HAVING SUM(y) > 0
----
project
  columns: a.x:0 .column3:2
  projections:
    variable (a.x) [in=0]
    variable (column3) [in=2]
  inputs:
    groupBy
      columns: +a.x:0 a.y:1 +.column3:2
      groupings:
        variable (a.x) [in=0]
      aggregations:
        func (sum) [in=1]
          inputs:
            variable (a.y) [in=1]
      filters:
        comp (>) [in=1]
          inputs:
            variable (column3) [in=2]
            const (0)
      inputs:
        scan
          columns: +a.x:0 +a.y:1
